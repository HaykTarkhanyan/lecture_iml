Counterfactual explanations are a valuable tool to explain predictions of 
a machine learning. They tell the user how features need to be changed 
in order to predict a desired outcome. 
One of the simplest approach to generate counterfactuals is to determine for 
a given observation $x^\star$ the closest data point which has a prediction equal to 
the desired outcome. 
In the following exercise, you should implement the so called WhatIf approach for a binary classifier (Wexler et al. 2019). 

\begin{enumerate}[a)]
  \item Implement the following steps in \texttt{generate\_whatif()}: 
  \begin{enumerate}
    \item Subset the \texttt{data} to the observations having a 
    prediction different to the one of $x^\star$ (this is equal to our desired prediction). 
    \item Calculate the pairwise Gower distances between \texttt{x\_interest} and the 
    remaining data points in \texttt{data}.\\ 
    \textit{Hint:} the \texttt{StatMatch} package offers an implemented Gower distance.
    \item Return the nearest data point as a counterfactual for \texttt{x\_interest}
  \end{enumerate}
  Try out your function with the provided example code. 
  
  \item Which attributes from the lecture (\textit{validity}, \textit{sparsity}, ...)
  does this approach fulfill. Based on this, derive the advantages and disadvantages of the approach.
  
  \item Complete the function \texttt{evaluate\_cfexp()} to evaluate if a counterfactual is minimial. 
  Your function should do the following: 
  
  \begin{enumerate}
    \item Create an empty vector \texttt{feature\_nams}.
    \item For each feature do the following: 
    \begin{enumerate}
    \item Create a copy of the counterfactual
    \item Replace the feature value of this copy with the value of $x^*$. 
    \item Evaluate if the prediction for this copy still differs to the one of $x^*$. 
    \item If it still differs, add the name of this feature to \texttt{feature\_nams}.
    \end{enumerate}
    \item End for - return the \texttt{feature\_nams}, the features which even after 
    setting them to the value of $x^*$ still leads to a different prediction than $x^*$.
  \end{enumerate}
  
  Try out your function with the WhatIf generated counterfactuals. 
  Which features could be reset to the value of $x^*$, which ones not?
\end{enumerate}